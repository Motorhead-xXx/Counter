{"version":3,"sources":["Components/ParametrCounter/ParametrCounter.module.css","Components/Button/Button.module.css","Components/Counter/Counter.module.css","reportWebVitals.ts","Components/Button/Button.tsx","Components/Button/ButtonDel.tsx","Components/Counter/Counter.tsx","Components/ParametrCounter/SatingCounter.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ButtonClick","props","className","s","buttonWrapper","Button","disableElevation","variant","color","size","disabled","onClick","callBack","children","ButtonDel","endIcon","Refresh","Counter","value","setValue","styleValue","display","max","condition","min","Local","Number","localStorage","getItem","style","fontSize","alignContent","wrapper","counterIncrease","resetCounter","SatingCounter","local","dis","inputWrapper","inputString","onChange","ChangeFilterMax","type","inputError","input","ChangeFilterMin","setLocalStorage","App","useState","useEffect","counter","valMax","JSON","parse","e","valueInput","currentTarget","setItem","stringify","valueCounter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f4c7108.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ParametrCounter_wrapper__yuEYo\",\"inputWrapper\":\"ParametrCounter_inputWrapper__3fotL\",\"input\":\"ParametrCounter_input__2m7PR\",\"inputError\":\"ParametrCounter_inputError__1kxjQ\",\"inputString\":\"ParametrCounter_inputString__GkUHX\",\"buttonWrapper\":\"ParametrCounter_buttonWrapper__1PIUE\",\"inc\":\"ParametrCounter_inc__2xdL9\",\"reset\":\"ParametrCounter_reset__1r2Gg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2aHnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Counter_wrapper__lv76M\",\"value\":\"Counter_value__34kov\",\"buttonWrapper\":\"Counter_buttonWrapper__3UyLz\",\"Set\":\"Counter_Set__3aNAY\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport s from \"./Button.module.css\"\r\nimport {Button} from \"@material-ui/core\";\r\n\r\ntype counterType = {\r\n    callBack: () => void\r\n    disabled: boolean\r\n    children: string\r\n}\r\n\r\nexport const ButtonClick = (props: counterType) => {\r\n    const buttonClick = () => {\r\n        props.callBack()\r\n    }\r\n\r\n    return (\r\n        <div className={s.buttonWrapper}>\r\n            <Button disableElevation variant={\"contained\"} color={\"success\"} size={\"small\"} disabled={props.disabled}\r\n                    onClick={buttonClick}>{props.children}</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\"\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Refresh} from \"@material-ui/icons\";\r\n\r\ntype counterType = {\r\n    callBack: () => void\r\n    disabled: boolean\r\n    children: string\r\n}\r\n\r\nexport const ButtonDel = (props: counterType) => {\r\n    const buttonClick = () => {\r\n        props.callBack()\r\n    }\r\n\r\n    return (\r\n        <div className={s.buttonWrapper}>\r\n            <Button disableElevation variant={\"contained\"} color={\"success\"} size={\"small\"} disabled={props.disabled}\r\n                    onClick={buttonClick} endIcon={<Refresh/>}>{props.children}</Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./Counter.module.css\"\r\nimport {ButtonClick} from \"../Button/Button\";\r\nimport {MaxMinType} from \"../../App\";\r\nimport {ButtonDel} from \"../Button/ButtonDel\";\r\n\r\ntype counterType = {\r\n    value: MaxMinType\r\n    setValue: (value:MaxMinType) => void\r\n    counterIncrease: () => void\r\n    resetCounter: () => void\r\n}\r\n\r\nconst Counter = ({value,setValue, ...props}: counterType) => {\r\n    const styleValue = {color: value.display === value.max ? \"red\" : \"black\"};\r\n    const condition = value.min < 0 || value.max < 0 || value.max < value.min || value.max === value.min;\r\n    const spanStyle = {color: \"red\", fontSize: \"30px\"};\r\n\r\n    const Local = Number(localStorage.getItem(\"max\")) !== value.max || Number(localStorage.getItem(\"min\")) !== value.min\r\n    const display = (condition) ? <span style={spanStyle}>Invalid value!</span> : Local ?\r\n        <span style={{color: \"blue\", fontSize: \"18px\", alignContent:\"center\"}}>Enter values and press \"set\"!</span>: value.display\r\n\r\n\r\n   const resetCounter = () => {\r\n            props.resetCounter()\r\n   }\r\n    const counterIncrease = () => {\r\n        props.counterIncrease()\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.value} style={styleValue}> {display}</div>\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <ButtonClick disabled={value.display === value.max || value.max < value.min || value.min < 0 || value.max === value.min || Local}\r\n                        callBack={counterIncrease}>inc</ButtonClick>\r\n                <ButtonDel disabled={value.display === value.min || value.min < 0 || value.max === value.min || value.max < value.min || Local} callBack={resetCounter}>reset</ButtonDel>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter;","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./ParametrCounter.module.css\"\r\nimport {ButtonClick} from \"../Button/Button\";\r\nimport {MaxMinType} from \"../../App\";\r\n\r\ntype ParametrType = {\r\n    ChangeFilterMax: (e: ChangeEvent<HTMLInputElement>) => void\r\n    ChangeFilterMin: (e: ChangeEvent<HTMLInputElement>) => void\r\n    setLocalStorage: () => void\r\n    value: MaxMinType\r\n    setValue: (value:MaxMinType) => void\r\n}\r\n\r\n\r\nexport const SatingCounter = ({value, ...props}: ParametrType) => {\r\n\r\n    let local = (Number(localStorage.getItem(\"max\")) === value.max && Number(localStorage.getItem(\"min\")) === value.min)\r\n    let dis = value.max < 0 || value.min < 0 || value.min === value.max || value.max < value.min\r\n\r\n    const localStorageSet = () => {\r\n        props.setLocalStorage()\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.inputWrapper}>\r\n\r\n                <div className={s.inputString}>\r\n                    max value: <input onChange={props.ChangeFilterMax} value={value.max} type={\"number\"}\r\n                                      className={dis ? s.inputError : s.input}/>\r\n                </div>\r\n\r\n\r\n                <div className={s.inputString}>\r\n                    start value: <input onChange={props.ChangeFilterMin} value={value.min} type={\"number\"}\r\n                                        className={value.min < 0 || value.max === value.min ||\r\n                                        value.max < value.min ? s.inputError : s.input}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.buttonWrapper}>\r\n                <ButtonClick disabled={dis||local} callBack={localStorageSet}>set</ButtonClick>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport Counter from \"./Components/Counter/Counter\";\nimport {SatingCounter} from \"./Components/ParametrCounter/SatingCounter\";\n\n\nexport type MaxMinType = {\n    max:number\n    min:number\n    display: number\n}\n\nfunction App() {\n    let [value, setValue] = useState<MaxMinType>({max:0, min:0, display:0})\n\n    useEffect(() => {\n        const counter = localStorage.getItem(\"counter\");\n        if (counter) {\n            let valMax = JSON.parse(counter)\n            setValue(valMax)\n        }\n    }, []);\n\n    const setLocalStorage = () => {\n        localStorage.setItem('counter', JSON.stringify(value))\n        localStorage.setItem('max', JSON.stringify(value.max))\n        localStorage.setItem('min', JSON.stringify(value.min))\n        setValue({...value,display:value.min})\n    }\n\n    const ChangeFilterMax = (e: ChangeEvent<HTMLInputElement>) => {\n        let valueInput = +e.currentTarget.value\n        setValue({...value, max:valueInput})\n    }\n\n    const ChangeFilterMin = (e: ChangeEvent<HTMLInputElement>) => {\n        let valueInput = +e.currentTarget.value\n        setValue({...value, min:valueInput, display:valueInput})\n    }\n\n    const counterIncrease = () => {\n        if (value.display !== value.max) {\n            let valueCounter = value.display + 1\n            setValue({...value, display:valueCounter})\n        }\n    }\n\n    const resetCounter = () => {\n        setValue({...value,display:value.min});\n    }\n\n\n    return (\n        <div className=\"App\">\n            <SatingCounter\n                ChangeFilterMax={ChangeFilterMax}\n                ChangeFilterMin={ChangeFilterMin}\n                setLocalStorage={setLocalStorage}\n                value={value}\n                setValue={setValue}\n\n            />\n\n            <Counter\n                     value={value}\n                     setValue={setValue}\n                     counterIncrease={counterIncrease}\n                     resetCounter={resetCounter}/>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}